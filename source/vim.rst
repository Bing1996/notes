VIM
=============


什么是vim
----------------
Vim 是从 vi 发展出来的一个文本编辑器。代码补全、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。
简单的来说， vi 是老式的字处理器，不过功能已经很齐全了，但是还是有可以进步的地方。 vim 则可以说是程序开发者的一项很好用的工具。连 vim 的官方网站 (https://www.vim.org/) 自己也说 vim 是一个程序开发工具而不是文字处理软件

vim基础操作
---------------

关于vim的三种模式：普通模式，可视模式和插入模式。可视模式根可视模式跟普通编辑器的选中有点像，都会选中一片文字，然后可以对选中的文字做一些操作。但 vim 的可视模式分三种，分别是：普通选中、按行选中和按列选中。使用v开始普通选中，使用V开始行选中，使用ctrl+v开始列选中。选中之后可以执行其他操作，返回普通模式直接按Esc。

以下是一些很重要的操作方式：
    - ^表示移到行首、$表示移到行尾。用过正则的朋友应该熟悉这两个字母。vim 还支持按单词移动，如w表示跳到下一个单词的开头，e表示跳到下一个单词的结尾
    - vim 行内移动的大杀器则是行内查找。大家可以通过键入f;跳转到当前行的下一个;上。这个f表示向前（行尾）查找；如果要向后查找，则需使用F。注意，行内查找仅支持单个字母
    - 向上翻页用ctrl+b，向下用ctrl+f。跳到文件的第一行用gg，最后一行用G
  
删除修改查找
    - 删除当前行用dd。删除光标所在的字母用x，修改用r+新字母。也可以选中之后按x或者d删除整片文字。大家选中之后还可以按c，vim 会删除选中内容，并切换到插入模式
    - vim 还有一个所谓的替换模式(Replace)，通过R开启，开启后光标所在的内容会被新输入的内容替换。结束用esc返回普通模式。
    - 只替换当前行:s/vi/vim/。这里的:让 vim 切换到命令模式，s表示替换，/vi/vim/表示将 vim 替换为 vim。表示回车。命令模式在执行完成之后会自动切换回普通模式。
    - vim 默认只会替换查找到的第一个 vi。如果要替换行内所有的 vim，则需要输入:s/vi/vim/g，注意最后的g。如果要全文替换，可以输入:%s/vi/vim/g
    - 撤销上次操作用u，反撤销用ctrl+r。

关于保存
    - 保存退出都要在命令模式下完成。保存用:w path.txt，退出用:q。如果是编辑已经存在的文件可以直接用:wq退出

Vim范式
    - 改动+重复可以使用.。如：先是cawhello esc将当前单词那成 hello，按w跳到下一个单词，再按.就会重复上次的改动将单词改成 hello。
    - 数字+操作可以重复执行多次相同的操作。如：j表示向下移动一行，10j表示向下移动 10 行。 p表示粘贴一次，10p表示粘贴 10 次。
    - 动作+范围可以显著提升效率。如：y$会复制从光标当前位置到行尾的所有内容；df;会删除光标所在位置到行内下一个分号间的所有内容。

VIM 插件
---------------

NERDTree文件树管理工具
NERDTree为Vim编辑器的文件管理工具，使用这个插件，用户能够直接可视化复杂的文件树继承关系，快速对文件进行读取与写入功能。

关于安装&使用

NERDTree on Vim 8+ 安装
.. code-block::
        
    git clone https://github.com/preservim/nerdtree.git ~/.vim/pack/vendor/start/nerdtree
    vim -u NONE -c "helptags ~/.vim/pack/vendor/start/nerdtree/doc" -c q

关于NERDTree热键设置
.. code-block::

    nnoremap <leader>n :NERDTreeFocus<CR>
    nnoremap <C-n> :NERDTree<CR>
    nnoremap <C-t> :NERDTreeToggle<CR>
    nnoremap <C-f> :NERDTreeFind<CR>    




